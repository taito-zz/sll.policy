=============================
Creating SLL Kauppa
=============================

Creating CartFolder
-------------------

Since there are kauppa folder in SLL site,
let's first put CartFolder content type directly under this folder.

We haven't created any form for customer information page now,
so leave the next form empty for now.

* The cart will be stored under this CartFolder.

Add ShippingMethod
------------------

Add ShippingMethod wherever folder you want.
If shipping happens only inland, keep the From Country and To Country blank.

There are several fields which will be considered for shipping cost calculation:

* Base Shipping Charge (BSC)
* Weight Charge (WC)
* Fuel Rate (FR)
* Insurance Base Charge (IBC)
* Insurance Rate (IR)
* Risk Rate (RR)
* Dimention Weight Ratio (DWR)

Each products have fields to calculate weight and dimension.
Based on DWR, the weight for the shipping cost calculation will be calculated.
This means that if products is big in space but light, then the dimension is used
as weight.

Example::

Product Weight = 1.0 kg
Product Dimension = 0.1 m 3
DWR = 250
Product Dimension Weight = 250 * 0.1 = 25.0 kg
Product Dimention Weight is heavier than Product Weight,
so Product Dimension Weight will be used for the shipping cost calculation.

Here is how shipping cost is calculated:

(BSC + Total Products Weight * WC) * (100 + FR) / 100 * (100 + RR) / 100 + IBC + Total Product Price * IR

When saved, remember to publish Shipping Method.

Site Setup >> Cart Config 

    Here you can configure general behavior for cart and products.
    Default setup is configured to sll.policy package, but if you need to change the default behavior,
    let me know.
    * Every reinstall of sll.policy turns your site back to default configuration.

Now let's create customer information form where the check out leads.

Under the kauppa folder add FormFolder.

    Title: Customer Information
    Overrides >> Custom Success Action: traverse_to:string:confirm
        This will traverse to "confirmation" FormFolder page, which will be created soon.
    Add the necessary fields:
        names and addersses, etc.

    Edit Mail Adapter if you want to send message here.
    You may add cart contens to Edit >> Template something like::

    <dl>
      <tal:block repeat="item python: context.restrictedTraverse('products')()">
        <dt tal:content="item/title" />
        <dd>
          <span tal:replace="item/price_with_currency" />, 
          <span tal:replace="item/quantity" /> kpl
        </dd>
      </tal:block>
    </dl>

If you want to save customer info to cart, add the something like next script to custom script.

--------------------------------------------------

items = dict(
    replyto = request.form["replyto"],
    topic = request.form['topic'],
    comments = request.form['comments'],
)

ploneformgen.restrictedTraverse('set-info')(items)

---------------------------------------------------

* replyto, topic and comments field values is now persisted to cart.

Now go to Cart Folder and insert the customer information form we created for the next form.

    Now that you add some products to cart and click next step, you go to the customer information page you just created.

    Now, let's add the confirm page.
        Add FormFolder with id confirm.
        * Most of the processes are similar to donation, so follow the DONATION.txt part liittymislomake2, ei you need to add all the necessary string field to the FormFolder.
          Follow the instructions in DONATION.txt or you can copy the working liittymislomake2 and past it under kauppa and change its id and title.

Overrides:

    AMOUNT: python:here.restrictedTraverse('total-cost')()
    ORDER_NUMBER: python:here.restrictedTraverse('cart-id')()


