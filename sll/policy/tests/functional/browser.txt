Initial imports and defines.
----------------------------
    >>> portal_url =  portal.absolute_url()
    >>> cart_url = '%s/@@cart' % portal_url
    >>> from Products.CMFCore.utils import getToolByName
    >>> mailhost = getToolByName(portal, 'MailHost')
    >>> def prink(e): print eval('"""%s"""' %str(e))

Check the amount of message
----
    >>> len(mailhost.messages)
    0

Setting up.
-----------
    >>> try:
    ...     from Testing.testbrowser import Browser
    ... except ImportError:
    ...     from Products.Five.testbrowser import Browser
    >>> browser = Browser()

For debugging.
--------------
    >>> browser.handleErrors = True
    >>> portal.error_log._ignored_exceptions = ()

Turn off portlets.
------------------
    >>> from zope.component import getUtility, getMultiAdapter
    >>> from plone.portlets.interfaces import IPortletManager
    >>> from plone.portlets.interfaces import IPortletAssignmentMapping

    >>> right_column = getUtility(IPortletManager, name=u"plone.rightcolumn")
    >>> right_assignable = getMultiAdapter((portal, right_column), IPortletAssignmentMapping)
    >>> for name in right_assignable.keys():
    ...     del right_assignable[name]

Log in as the portal owner.
---------------------------
    >>> try:
    ...     browser.open(portal_url)
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> 'Kotkankatu 9' in browser.contents
    True

    >>> from Products.PloneTestCase.setup import portal_owner, default_password
    >>> browser.open(portal_url + '/login_form?came_from=' + portal_url)
    >>> browser.getControl(name='__ac_name').value = portal_owner
    >>> browser.getControl(name='__ac_password').value = default_password
    >>> browser.getControl(name='submit').click()

#Payment Config
#--------------
#    >>> browser.getLink('Site Setup').click()
#    >>> browser.getLink('Payment Config').click()
#    >>> browser.getControl(name="mac").value = '6pKF4jkv97zmqBJ3ZL8gUw5DfT2NMQ'
#    >>> browser.getControl(name="fields").value = 'MERCHANT_ID\r\nAMOUNT\r\nORDER_NUMBER\r\nREFERENCE_NUMBER\r\nORDER_DESCRIPTION\r\nCURRENCY\r\nRETURN_ADDRESS\r\nCANCEL_ADDRESS\r\nPENDING_ADDRESS\r\nNOTIFY_ADDRESS\r\nTYPE\r\nCULTURE\r\nPRESELECTED_METHOD\r\nMODE\r\nVISIBLE_METHODS\r\nGROUP'
#    >>> browser.getControl(name="separator").value = '|'
#    >>> browser.getControl(name="capital").value = True
#    >>> browser.getControl(name="form.button.UpdatePaymentProperties").click()

Add CartFolder
--------------
    >>> browser.open(portal_url)
    >>> browser.getLink(id="cartfolder").click()
    >>> browser.getControl(name="title").value = 'CartFolder'
    >>> browser.getControl("Save").click()
    >>> cfolder = portal['cartfolder']
    >>> cfolder_url = cfolder.absolute_url()
    >>> cfolder
    <CartFolder at /plone/cartfolder>

Create Shipping Method Folder
-----------------------------
    >>> browser.open(portal_url)
    >>> browser.getLink(id="folder").click()
    >>> browser.getControl(name="title").value = 'Shipping Method Folder'
    >>> browser.getControl('Save').click()

Add Shipping Method
-------------------
    >>> browser.getLink(id='shippingmethod').click()
    >>> browser.getControl(name="title").value = "ShippingMethod01"
    >>> browser.getControl(name="description").value = "Description of ShippingMethod01"
    >>> browser.getControl(name="base_charge").value = '10.00'
    >>> browser.getControl(name="min_delivery_days").value = '3'
    >>> browser.getControl(name="max_delivery_days").value = '14'
    >>> browser.getControl('Save').click()
    >>> browser.getLink('Publish').click()

Create Document
----------------
    >>> browser.open(portal_url)
    >>> browser.getLink(id="document").click()
    >>> browser.getControl(name="title").value = 'Product01'
    >>> browser.getControl('Save').click()
    >>> browser.getLink(id="make_addable_to_cart").click()
    >>> browser.getControl(name="price").value = '1.0'
    >>> browser.getControl(name="unlimited_stock").value = True
    >>> browser.getControl('Update', index=0).click()
    >>> browser.getLink('View').click()
    >>> '1,00 â‚¬' in browser.contents
    True
    >>> browser.getLink('Publish').click()
    >>> product01 = portal.product01
    >>> product01_url = product01.absolute_url()

Now let us create customer info form folder to where check out leads.
---------------------------------------------------------------------
    >>> browser.open(portal_url)
    >>> browser.getLink(id="formfolder").click()
    >>> browser.getControl(name="title").value = 'Customer Info'
    >>> browser.getControl(name="thanksPage").value = ['']
    >>> browser.getControl(name="thanksPageOverride").value = 'traverse_to:string:confirmation-page'
    >>> browser.getControl('Save').click()
    >>> browser.getLink('Publish').click()
    >>> customer_info = portal['customer-info']
    >>> customer_info_url = customer_info.absolute_url()
    >>> customer_info_uid = customer_info.UID()

Edit Mailer
-----------
    >>> customer_info_mailer = customer_info.mailer
    >>> customer_info_mailer_url = customer_info_mailer.absolute_url()
    >>> browser.open(customer_info_mailer_url)
    >>> browser.getLink('Edit').click()
    
#    >>> browser.getControl(name="recipient_name").value = 'Shop Name'
#    >>> browser.getControl(name="recipient_email").value = 'shop@shop.com'

    >>> browser.getControl(name="to_field").value = ['replyto']
    >>> browser.getControl(name="cc_recipients:lines").value = 'shop@shop.com'
    >>> browser.getControl(name="replyto_field").value = ["#NONE#"]
    >>> browser.getControl(name="subject_field").value = ["#NONE#"]
    >>> browser.getControl('Save').click()

Add ORDER_NUMBER field to Customer Info
---------------------------------------
    >>> browser.open(customer_info_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'ORDER_NUMBER'
    >>> browser.getControl(name="title").value = 'ORDER_NUMBER'

    >>> browser.getControl(name="fgDefault").value = '1'

#    >>> browser.getControl(name="fgTDefault").value = 'python:here.restrictedTraverse("cart-id")()'

    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found
    >>> ci_order_number_url = customer_info['ORDER_NUMBER'].absolute_url()
    >>> browser.open(customer_info_url)
    >>> 'id="ORDER_NUMBER" value="1"' in browser.contents
    True

Now let us creat Confirmation Page
----------------------------------
    >>> browser.open(portal_url)
    >>> browser.getLink(id="formfolder").click()
    >>> browser.getControl(name="title").value = 'Confirmation Page'
    >>> browser.getControl('Save').click()
    >>> browser.getLink('Publish').click()
    >>> confirmation = portal['confirmation-page']
    >>> confirmation_url = confirmation.absolute_url()

Now let us add all the necessary fields to the form folder.
--------------------------------------------------------
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'MERCHANT_ID'
    >>> browser.getControl(name="title").value = 'MERCHANT_ID'
    >>> browser.getControl(name="fgDefault").value = '13466'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink('Contents').click()
    >>> 'MERCHANT_ID' in browser.contents
    True
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'AMOUNT'
    >>> browser.getControl(name="title").value = 'AMOUNT'

    >>> browser.getControl(name="fgDefault").value = '1'

#    >>> browser.getControl(name="fgTDefault").value = 'python:here.restrictedTraverse("total-price")()'

    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found
    >>> amount_url = confirmation['AMOUNT'].absolute_url()

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'ORDER_NUMBER'
    >>> browser.getControl(name="title").value = 'ORDER_NUMBER'

    >>> browser.getControl(name="fgDefault").value = '1'

#    >>> browser.getControl(name="fgTDefault").value = 'python:here.restrictedTraverse("cart-id")()'

    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found
    >>> co_order_number_url = confirmation['ORDER_NUMBER'].absolute_url()

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'REFERENCE_NUMBER'
    >>> browser.getControl(name="title").value = 'REFERENCE_NUMBER'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'ORDER_DESCRIPTION'
    >>> browser.getControl(name="title").value = 'ORDER_DESCRIPTION'
    >>> browser.getControl(name="fgDefault").value = 'taito.horiuchi@gmail.com,t,t,1'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'CURRENCY'
    >>> browser.getControl(name="title").value = 'CURRENCY'
    >>> browser.getControl(name="fgDefault").value = 'EUR'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'RETURN_ADDRESS'
    >>> browser.getControl(name="title").value = 'RETURN_ADDRESS'
    >>> browser.getControl(name="fgDefault").value = 'http://localhost:8080/Plone/form-folder/@@verkkomaksut-success'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found
    >>> return_address_url = confirmation['RETURN_ADDRESS'].absolute_url()

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'CANCEL_ADDRESS'
    >>> browser.getControl(name="title").value = 'CANCEL_ADDRESS'
    >>> browser.getControl(name="fgDefault").value = 'http://localhost:8080/Plone/form-folder/verkkomakust/@@verkkomaksut-canceled'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'PENDING_ADDRESS'
    >>> browser.getControl(name="title").value = 'PENDING_ADDRESS'
    >>> browser.getControl(name="fgDefault").value = ''
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'NOTIFY_ADDRESS'
    >>> browser.getControl(name="title").value = 'NOTIFY_ADDRESS'
    >>> browser.getControl(name="fgDefault").value = 'http://localhost:8080/Plone/form-folder/verkkomakust/@@verkkomaksut-notify'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'TYPE'
    >>> browser.getControl(name="title").value = 'TYPE'
    >>> browser.getControl(name="fgDefault").value = 'S1'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'CULTURE'
    >>> browser.getControl(name="title").value = 'CULTURE'
    >>> browser.getControl(name="fgDefault").value = 'fi_FI'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'PRESELECTED_METHOD'
    >>> browser.getControl(name="title").value = 'PRESELECTED_METHOD'
    >>> browser.getControl(name="fgDefault").value = ''
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'MODE'
    >>> browser.getControl(name="title").value = 'MODE'
    >>> browser.getControl(name="fgDefault").value = '1'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'VISIBLE_METHODS'
    >>> browser.getControl(name="title").value = 'VISIBLE_METHODS'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'GROUP'
    >>> browser.getControl(name="title").value = 'GROUP'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)
    >>> browser.getLink(id="formstringfield").click()
    >>> browser.getControl(name="id").value = 'AUTHCODE'
    >>> browser.getControl(name="title").value = 'AUTHCODE'
    >>> browser.getControl(name="fgTDefault").value = 'python:here.restrictedTraverse("auth-code")()'
    >>> browser.getControl('Save').click()
    Traceback (most recent call last):
    ...
    HTTPError: HTTP Error 404: Not Found

    >>> browser.open(confirmation_url)

    >>> '91A9848AC8BCDF6D5A8EBDB5A041B00E' in browser.contents
    True

Set customer info for the next step button.
------------------------------------------------------------------
    >>> from Products.CMFCore.utils import getToolByName
    >>> rc = getToolByName(portal, 'reference_catalog')
    >>> cfolder.setNext_form(customer_info_uid)
    >>> cfolder.reindexObject()
    >>> browser.open(cfolder_url)
    >>> browser.getLink('Edit').click()
    >>> value = 'value="%s"' % customer_info_uid
    >>> value in browser.contents
    True

Log out, go to Product01 and add to cart.
------------------------------------------
    >>> browser.getLink('Log out').click()
    >>> browser.open(product01_url)

    >>> try:
    ...     browser.getControl(name="form.button.AddToCart").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()
    >>> 'class="portlet portletCart"' in browser.contents
    True

    >>> try:
    ...     browser.open(cart_url)
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> browser.getControl(name="quantity").value = ['2']

    >>> try:
    ...     browser.getControl(name="form.button.UpdateCartContent").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> browser.getControl(name="form.button.DeleteCartContent").click()

    >>> browser.open(product01_url)

    >>> try:
    ...     browser.getControl(name="form.button.AddToCart").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> 'class="portlet portletCart"' in browser.contents
    True

    >>> try:
    ...     browser.open(cart_url)
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> try:
    ...     browser.getControl(name="form.button.NextStep").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> browser.url
    'http://nohost/plone/customer-info'

    >>> browser.getControl(name="replyto").value = 'customer@customer.com'
    >>> browser.getControl(name="topic").value = 'Full Name'
    >>> browser.getControl(name="comments").value = 'Some Comment'
    >>> browser.getControl('Submit').click()
    >>> browser.url
    'http://nohost/plone/customer-info'
    >>> '91A9848AC8BCDF6D5A8EBDB5A041B00E' in browser.contents
    True

    >>> len(mailhost.messages)
    1
    >>> msg = mailhost.messages[-1]
    >>> prink(msg)
    Content-Type: text/html; charset="utf-8"
    MIME-Version: 1.0
    Content-Transfer-Encoding: base64
    To: <customer@customer.com>
    From: webmaster@sll.fi
    Subject: =?utf-8?q?Form_Submission?=
    MIME-Version: 1.0
    Cc: <shop@shop.com>
    X-HTTP_X_FORWARDED_FOR: 
    X-REMOTE_ADDR: 
    X-PATH_INFO: /plone/customer-info
    <BLANKLINE>
    ...
    <BLANKLINE>


Log in and change AMOUNT to 1.00 and see what happens.
--------------------------------------------
    >>> browser.open(portal_url + '/login_form?came_from=' + portal_url)
    >>> browser.getControl(name='__ac_name').value = portal_owner
    >>> browser.getControl(name='__ac_password').value = default_password
    >>> browser.getControl(name='submit').click()
    >>> browser.open(amount_url)
    >>> browser.getLink('Edit').click()
    >>> browser.getControl(name="fgDefault").value = '1.00'

#    >>> browser.getControl(name="fgTDefault").value = 'python:here.restrictedTraverse("total-price")()'

    >>> browser.getControl('Save').click()

Log out and go through the purchase process.
---------------------------------------------
    >>> browser.getLink('Log out').click()
    >>> browser.open(product01_url)
    >>> browser.getControl(name="form.button.AddToCart").click()
    >>> 'class="portlet portletCart"' in browser.contents
    True

    >>> try:
    ...     browser.open(cart_url)
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> try:
    ...     browser.getControl(name="form.button.NextStep").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()
    >>> browser.getControl(name="replyto").value = 'customer@customer.com'
    >>> browser.getControl(name="topic").value = 'Full Name'
    >>> browser.getControl(name="comments").value = 'Some Comment'
    >>> browser.getControl('Submit').click()
    >>> '91A9848AC8BCDF6D5A8EBDB5A041B00E' in browser.contents
    False
    >>> '83C69CC05743E444C4D340083335347A' in browser.contents
    True

    >>> len(mailhost.messages)
    1
    >>> msg = mailhost.messages[-1]
    >>> prink(msg)
    Content-Type: text/html; charset="utf-8"
    MIME-Version: 1.0
    Content-Transfer-Encoding: base64
    To: <customer@customer.com>
    From: webmaster@sll.fi
    Subject: =?utf-8?q?Form_Submission?=
    MIME-Version: 1.0
    Cc: <shop@shop.com>
    X-HTTP_X_FORWARDED_FOR: 
    X-REMOTE_ADDR: 
    X-PATH_INFO: /plone/customer-info
    <BLANKLINE>
    ...
    <BLANKLINE>

Log in and change AMOUNT, ORDER_NUMBER and RETURN_URL
-------------------------------------------
    >>> browser.open(portal_url + '/login_form?came_from=' + portal_url)
    >>> browser.getControl(name='__ac_name').value = portal_owner
    >>> browser.getControl(name='__ac_password').value = default_password
    >>> browser.getControl(name='submit').click()
    >>> browser.open(amount_url)
    >>> browser.getLink('Edit').click()
    >>> browser.getControl(name="fgTDefault").value = 'python:here.restrictedTraverse("total-price")()'
    >>> browser.getControl('Save').click()
    >>> browser.open(ci_order_number_url)
    >>> browser.getLink('Edit').click()
    >>> browser.getControl(name="fgTDefault").value = 'python:here.restrictedTraverse("cart-id")()'
    >>> browser.getControl('Save').click()
    >>> browser.open(return_address_url)
    >>> browser.getLink('Edit').click()
    >>> browser.getControl(name="fgTDefault").value = 'string:${portal_url}/payment-success/thank-you/@@payment-succeeded'
    >>> browser.getControl('Save').click()

Log out and go through the purchase process.
---------------------------------------------
    >>> browser.getLink('Log out').click()
    >>> browser.open(product01_url)
    >>> browser.getControl(name="form.button.AddToCart").click()
    >>> 'class="portlet portletCart"' in browser.contents
    True

    >>> try:
    ...     browser.open(cart_url)
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> try:
    ...     browser.getControl(name="form.button.NextStep").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()
    >>> browser.getControl(name="replyto").value = 'customer@customer.com'
    >>> browser.getControl(name="topic").value = 'Full Name'
    >>> browser.getControl(name="comments").value = 'Some Comment'
    >>> browser.getControl('Submit').click()
    >>> '91A9848AC8BCDF6D5A8EBDB5A041B00E' in browser.contents
    False
    >>> '83C69CC05743E444C4D340083335347A' in browser.contents
    False

Check the amount of message
----
    >>> len(mailhost.messages)
    1
    >>> msg = mailhost.messages[-1]
    >>> prink(msg)
    Content-Type: text/html; charset="utf-8"
    MIME-Version: 1.0
    Content-Transfer-Encoding: base64
    To: <customer@customer.com>
    From: webmaster@sll.fi
    Subject: =?utf-8?q?Form_Submission?=
    MIME-Version: 1.0
    Cc: <shop@shop.com>
    X-HTTP_X_FORWARDED_FOR: 
    X-REMOTE_ADDR: 
    X-PATH_INFO: /plone/customer-info
    <BLANKLINE>
    ...
    <BLANKLINE>

Log in and make confirmation page Cart Aware
---------------------------------------------
    >>> browser.open(portal_url + '/login_form?came_from=' + portal_url)
    >>> browser.getControl(name='__ac_name').value = portal_owner
    >>> browser.getControl(name='__ac_password').value = default_password
    >>> browser.getControl(name='submit').click()
    >>> browser.open(confirmation_url)

    >>> try:
    ...     browser.getLink(id="make_cart_aware").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

Log out and got to confirmation page
-------------------------------------
    >>> browser.getLink('Log out').click()

    >>> try:
    ...     browser.open(confirmation_url)
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

#    >>> browser.open(confirmation_url)

#    >>> browser.url
#    'http://nohost/plone/@@cart'

    >>> browser.open(product01_url)
    >>> browser.getControl(name="form.button.AddToCart").click()
    >>> 'class="portlet portletCart"' in browser.contents
    True

    >>> try:
    ...     browser.open(cart_url)
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()

    >>> try:
    ...     browser.getControl(name="form.button.NextStep").click()
    ... except:
    ...     print portal.error_log.getLogEntries()[0]['tb_text']
    ...     import pdb; pdb.set_trace()
    >>> browser.getControl(name="replyto").value = 'customer@customer.com'
    >>> browser.getControl(name="topic").value = 'Full Name'
    >>> browser.getControl(name="comments").value = 'Some Comment'
    >>> browser.getControl('Submit').click()
