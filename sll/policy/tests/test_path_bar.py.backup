from Testing import ZopeTestCase as ztc
from sll.policy.tests import base
from Products.CMFCore.utils import getToolByName
from zope.interface import alsoProvides
from plone.app.layout.navigation.interfaces import INavigationRoot

import doctest
import unittest2 as unittest


class TestSetup(base.FunctionalTestCase):

    def afterSetUp( self ):
        """After SetUp"""
        self.setRoles(('Manager',))
        ## Set up sessioning objects
        ztc.utils.setupCoreSessions(self.app)
        wftool = getToolByName(self.portal, 'portal_workflow')
        ## Creating folder01
        self.portal.invokeFactory('Folder', 'folder01', title="Folder01")
        folder01 = self.portal.folder01
        wftool.doActionFor(folder01, "publish")
        alsoProvides(folder01, INavigationRoot)
        folder01.reindexObject()
        ## Creating folder02 within folder01
        folder01.invokeFactory('Folder', 'folder02', title="Folder02")
        folder02 = folder01.folder02
        wftool.doActionFor(folder02, "publish")
        folder02.reindexObject()
        ## Creating doc01 within folder02
        folder02.invokeFactory('Document', 'doc01', title="Doc01")
        doc01 = folder02.doc01
        wftool.doActionFor(doc01, "publish")
        doc01.reindexObject()


def test_suite():
    return unittest.TestSuite([

        ztc.FunctionalDocFileSuite(
            'tests/functional/path_bar.txt',
            package='sll.policy',
            test_class=TestSetup,
            optionflags=doctest.REPORT_ONLY_FIRST_FAILURE | doctest.NORMALIZE_WHITESPACE | doctest.ELLIPSIS),

            ])

if __name__ == '__main__':
    unittest.main(defaultTest='test_suite')
